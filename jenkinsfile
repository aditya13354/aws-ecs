pipeline {
    agent any
    environment {
        vprofileRegistry = 'https://903054967221.dkr.ecr.us-east-1.amazonaws.com' // Remove "https://" protocol
        registryCredential = 'ecr:us-east-1:aws'
        aws_cred = 'aws'// Credential ID for accessing ECR
        dockerImage = "ccf-platform" // Define the Docker image name
        awsRegion = 'us-east-1' // Specify your AWS region
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/aditya13354/aws-ecs.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    // Build the Docker image with the Jenkins build number as the tag
                    docker.build("${dockerImage}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Upload App Image') {
            steps {
                script {
                    // Push the Docker image to ECR with the Jenkins build number as the tag
                    docker.withRegistry("${vprofileRegistry}", "${registryCredential}") {
                        docker.image("${dockerImage}:${env.BUILD_NUMBER}").push()
                    }
                }
            }
        }

        stage('Deploy to ECS') {
            steps {
                script {
                     withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: aws_cred]]) {
                    // Execute the shell script to deploy the service to ECS
                    sh "chmod +x deploy_to_ecs.sh" // Ensure the script is executable
                    sh "./deploy_to_ecs.sh"
                     }
                }
            }
        }
    }
}
